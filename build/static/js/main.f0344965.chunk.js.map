{"version":3,"sources":["Components/Input.js","Components/FixedInformationSection.js","Components/Suggestion.js","Components/SuggestionList.js","Components/FoodItem.js","Components/ListSection.js","Components/Output.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Input","id","name","value","onChange","description","placeholder","unit","type","event","FixedInformationSection","setBloodSugar","setTargetBloodSugar","setCorrectionFactor","setCarbohydrateFactor","bloodSugar","targetBloodSugar","correctionFactor","carbohydrateFactor","toString","target","Suggestion","suggestionText","handleSuggestionClick","onClick","SuggestionList","allSuggestions","searchingText","filter","slice","length","toLowerCase","map","key","Math","random","FoodItem","grams","carbohydratesPer100Grams","isIntermeal","handleIsIntermealChange","handleChange","deleteFoodItem","suggestions","className","checked","ListSection","foodItems","addNewFoodItem","element","Output","totalIE","totalMainMealKE","totalIntermealKE","totalKE","totalCorrectionInsulin","outputRef","ref","undefined","useLocalStorage","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","hideLoadingScreen","lastSavedData","setLastSavedData","getCurrentDayTime","setFoodItems","setTotalIE","setTotalKE","setTotalCorrectionInsulin","setTotalIntermealKE","setTotalMainMealKE","useRef","Date","toLocaleTimeString","split","hours","minutes","time","toNumberFormat","newFoodItems","foodItem","removeItem","string","stringCopy","replace","number","parseFloat","Number","isNaN","calculateIE","ERROR_MESSAGE","areItemsTypeofNumber","items","item","calculateKE","alert","correctionInsulin","calculateCorrectionInsuline","round","KE","intermealKE","IE","current","scrollIntoView","smooth","removeIdx","idx","splice","ReactDOM","render","document","getElementById","classList","add"],"mappings":"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","file":"static/js/main.f0344965.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../css/style.css'\r\n\r\nexport default function Input({id, name='',value='', onChange='', description='', placeholder='', unit=''}) {\r\n    return (\r\n        <div>\r\n            <label> \r\n                {description}\r\n            </label>\r\n            <br />\r\n            <input\r\n                type='text'\r\n                id={id}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange === '' ? () => 0 : (event) => onChange(event)}\r\n            ></input>\r\n            <label>\r\n                {unit}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\nimport Input from './Input'\r\n\r\nexport default function FixedInformationSection(\r\n    {setBloodSugar, \r\n    setTargetBloodSugar, \r\n    setCorrectionFactor,\r\n    setCarbohydrateFactor,\r\n    bloodSugar, \r\n    targetBloodSugar, \r\n    correctionFactor, \r\n    carbohydrateFactor\r\n    }) {\r\n    \r\n    return (\r\n        <div>\r\n            <Input \r\n                name = 'BloodSugar'\r\n                value = {bloodSugar.toString()}\r\n                description = 'Blutzucker'\r\n                unit = 'mg/dl'\r\n                onChange = {(event) => setBloodSugar(event.target.value)}\r\n            />\r\n            <Input \r\n                name = 'TargetBloodSugar'\r\n                value = {targetBloodSugar}\r\n                description = 'Blutzucker Zielwert'\r\n                unit = 'mg/dl'\r\n                onChange = {(event) => setTargetBloodSugar(event.target.value)}\r\n            />\r\n            <Input \r\n                name = 'CorrectionFactor'\r\n                value = {correctionFactor}\r\n                description = 'Korrektur-Faktor'\r\n                unit = 'mg/dl'\r\n                onChange = {(event) => setCorrectionFactor(event.target.value)}\r\n            />\r\n            <Input \r\n                name = 'CarbohydrateFactor'\r\n                value = {carbohydrateFactor}\r\n                description = 'KE-Faktor'\r\n                onChange = {(event) => setCarbohydrateFactor(event.target.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Suggestion({suggestionText, handleSuggestionClick}) {\r\n    return (\r\n        <li\r\n            onClick={() => handleSuggestionClick(suggestionText)}\r\n        >\r\n            {suggestionText}\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Suggestion from './Suggestion.js'\r\n\r\nexport default function SuggestionList({allSuggestions, searchingText, handleSuggestionClick}) {\r\n    return (\r\n        <div>\r\n            {searchingText !== '' && <ul>\r\n                {allSuggestions.filter(suggestionText => {\r\n                    const potentialMatch = suggestionText.slice(0, searchingText.length)\r\n                    return potentialMatch === searchingText.toLowerCase()\r\n                }).map(suggestionText => <Suggestion \r\n                    key={Math.random()} \r\n                    suggestionText={suggestionText} \r\n                    handleSuggestionClick={handleSuggestionClick}\r\n                />)}\r\n            </ul>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\nimport Input from './Input'\r\nimport SuggestionList from './SuggestionList.js'\r\n\r\nexport default function FoodItem(\r\n    {id, \r\n    name='', \r\n    grams='', \r\n    carbohydratesPer100Grams='',\r\n    isIntermeal=false, \r\n    handleIsIntermealChange, \r\n    handleChange, \r\n    deleteFoodItem,\r\n    suggestions=false,\r\n    handleSuggestionClick\r\n    }) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className = 'delete-food-item-button'\r\n                onClick={() => deleteFoodItem(id)}\r\n            ></button>\r\n\r\n            <label className='intermeal-checkbox'>\r\n                <input\r\n                    type = 'checkbox'\r\n                    checked = {isIntermeal}\r\n                    onChange = {() => handleIsIntermealChange(id)}\r\n                ></input> ZM?\r\n            </label>\r\n            \r\n            \r\n            <Input \r\n                id = {id}\r\n                name = 'name'\r\n                description = 'Name'\r\n                value = {name}\r\n                onChange = {(event) => handleChange(event)}\r\n            />\r\n\r\n            {suggestions && <SuggestionList \r\n                allSuggestions={['banane', 'bambus', 'brötchen', 'apfel', 'ananas']}\r\n                searchingText={name}\r\n                handleSuggestionClick={(suggestionText) => handleSuggestionClick(suggestionText, id)}\r\n            />}\r\n\r\n            <Input\r\n                id = {id}\r\n                name = 'grams'\r\n                description = 'Gramm'\r\n                value = {grams}\r\n                onChange = {(event) => handleChange(event)}\r\n            />\r\n            <Input\r\n                id = {id}\r\n                name = 'carbohydratesPer100Grams'\r\n                description = 'Kohlenhydrate pro 100g'\r\n                value = {carbohydratesPer100Grams}\r\n                onChange = {(event) => handleChange(event)}\r\n            />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\nimport FoodItem from './FoodItem'\r\n\r\nexport default function ListSection(\r\n    {foodItems=[], \r\n    addNewFoodItem, \r\n    handleIsIntermealChange, \r\n    handleChange, \r\n    deleteFoodItem,\r\n    handleSuggestionClick\r\n    }) {\r\n    return (\r\n        <div>\r\n            <h3>Elemente</h3>\r\n\r\n            {foodItems.map(element => \r\n                <FoodItem \r\n                    key={element.key}\r\n                    id={element.id}\r\n                    name={element.name}\r\n                    grams={element.grams}\r\n                    carbohydratesPer100Grams={element.carbohydratesPer100Grams}\r\n                    isIntermeal={element.isIntermeal}\r\n                    handleIsIntermealChange={handleIsIntermealChange}\r\n                    handleChange={handleChange}\r\n                    deleteFoodItem={deleteFoodItem}\r\n                    handleSuggestionClick={handleSuggestionClick}\r\n             />)}\r\n             \r\n            <p>\r\n                <button \r\n                    className='add-new-food-item-button'\r\n                    onClick={() => addNewFoodItem()}\r\n                ></button>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\n\r\nexport default function Output(\r\n    {totalIE, totalMainMealKE, totalIntermealKE, totalKE, totalCorrectionInsulin, outputRef}) {\r\n    return (\r\n        <div ref={outputRef}>\r\n            {!(totalIE === '' || totalIE == undefined || totalIE <= 0) ? \r\n\r\n                <p className='output' >\r\n                    Hauptmahlzeit-KE : {totalMainMealKE} KE <br />\r\n                    Zwischenmahlzeit-KE : {totalIntermealKE} KE <br />\r\n                    Gesamt-KE: {totalKE} KE <br />\r\n                    <br />\r\n                    Korrektur-Insulin: {totalCorrectionInsulin} IE  <br />\r\n                    Gesamt-Insulin: {totalIE} IE\r\n                </p>\r\n                \r\n             : ''}\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nconst PREFIX = \"insulin-calculator-\"\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    // get value\r\n    const prefixedKey = PREFIX + key\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if(jsonValue != null) return JSON.parse(jsonValue)\r\n        if(typeof initialValue === \"function\"){\r\n            return initialValue()\r\n        } else{\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    // save value\r\n    useEffect(() =>{\r\n        if(value != null)\r\n            localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue]\r\n}\r\n","import React, {useState, useRef, useEffect} from 'react'\r\n\r\nimport './css/style.css'\r\nimport FixedInformationSection from './Components/FixedInformationSection'\r\nimport ListSection from './Components/ListSection'\r\nimport Output from './Components/Output.js'\r\nimport useLocalStorage from './hooks/useLocalStorage.js'\r\n\r\n\r\nconst PREFIX = \"insulin-calculator-\"\r\n\r\nexport default function App( {hideLoadingScreen} ) {\r\n    const [lastSavedData, setLastSavedData] = useLocalStorage('lastSavedData')\r\n\r\n    const [bloodSugar, setBloodSugar] = useState('')\r\n    const [targetBloodSugar, setTargetBloodSugar] = useLocalStorage(`${getCurrentDayTime()}-targetBloodSugar`)\r\n    const [correctionFactor, setCorrectionFactor] = useLocalStorage(`${getCurrentDayTime()}-correctionFactor`)\r\n    const [carbohydrateFactor, setCarbohydrateFactor] = useLocalStorage(`${getCurrentDayTime()}-carbohydrateFactor`)\r\n\r\n    const [foodItems, setFoodItems] = useState([])\r\n\r\n    const [totalIE, setTotalIE] = useState('')\r\n    const [totalKE, setTotalKE] = useState('')\r\n    const [totalCorrectionInsulin, setTotalCorrectionInsulin] = useState('')\r\n    const [totalIntermealKE, setTotalIntermealKE] = useState('')\r\n    const [totalMainMealKE, setTotalMainMealKE] = useState('')\r\n\r\n    const outputRef = useRef()\r\n    \r\n    \r\n    // useEffect(() => {\r\n    //     hideLoadingScreen()\r\n    // }, [])\r\n    \r\n    function saveData(){\r\n        const newData = {\r\n            foodItems: foodItems\r\n        }\r\n        setLastSavedData(newData)\r\n    }\r\n\r\n    function loadData(){\r\n        if(lastSavedData == null) return\r\n        const {foodItems} = lastSavedData\r\n\r\n        setFoodItems(foodItems)\r\n\r\n        // not working because of async state setting\r\n        calculateIE()\r\n    }\r\n\r\n    function handleSuggestionClick(suggestionText, id){\r\n        const event = {target:{name:'name', value:suggestionText, id:id}}\r\n        handleChange(event)\r\n    }\r\n\r\n    function getCurrentDayTime(){\r\n        const [hours, minutes] = new Date().toLocaleTimeString().split(':')\r\n        const time =  toNumberFormat(hours) + (toNumberFormat(minutes) / 60)\r\n        let dayTime = ''\r\n        if(time <= 11.5){\r\n            dayTime = 'morning'\r\n        } else if(time <= 16){\r\n            dayTime = 'midday'\r\n        } else {\r\n            dayTime = 'evening'\r\n        }\r\n\r\n        return dayTime\r\n    }\r\n\r\n    function addNewFoodItem(){\r\n        const newFoodItems = [...foodItems, {\r\n            key:Math.random(),\r\n            id:Math.random(),\r\n            isIntermeal: false\r\n        }]\r\n        setFoodItems(newFoodItems)\r\n    }\r\n\r\n    function deleteFoodItem(id){\r\n        let removeIdx\r\n        for(let idx = 0; idx < foodItems.length; idx++){\r\n            if(id == foodItems[idx].id){\r\n                removeIdx = idx\r\n                break\r\n            }\r\n        }\r\n\r\n        const newFoodItems = [...foodItems]\r\n        newFoodItems.splice(removeIdx, 1)\r\n        setFoodItems(newFoodItems)\r\n    }\r\n\r\n    function handleChange(event){\r\n        const {name, value, id} = event.target\r\n\r\n        const newFoodItems = foodItems.map(foodItem => {\r\n            if(id == foodItem.id){\r\n\r\n                // getting carbohydratesPer100Grams from name and setting the carbohydratesPer100Grams input\r\n                if(name === 'name'){\r\n                    const prefixedKey = `${PREFIX}foodItem-${value.toLowerCase()}-carbohydratesPer100Grams`\r\n                    const jsonValue = localStorage.getItem(prefixedKey)\r\n                    if(jsonValue != null){\r\n                        const carbohydratesPer100Grams = JSON.parse(jsonValue)\r\n\r\n                        return {...foodItem, [name]:value, \r\n                            carbohydratesPer100Grams: carbohydratesPer100Grams}\r\n                    }\r\n                }      \r\n                \r\n                 // saving carbohydratesPer100Grams with name as key\r\n                 if(name === 'carbohydratesPer100Grams' && foodItem.name !== '' && foodItem.name[0] !== '.'){\r\n                    const prefixedKey = `${PREFIX}foodItem-${foodItem.name.toLowerCase()}-carbohydratesPer100Grams`\r\n                    if(value !== '') localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n                    else localStorage.removeItem(prefixedKey)\r\n                }\r\n\r\n                return {...foodItem, [name]:value}\r\n            }\r\n            return foodItem\r\n        })\r\n        setFoodItems(newFoodItems)\r\n    }\r\n\r\n    function handleIsIntermealChange(id){\r\n        const newFoodItems = foodItems.map(foodItem => {\r\n            if(id == foodItem.id)\r\n                return {...foodItem, isIntermeal: !foodItem.isIntermeal}\r\n            \r\n            return foodItem\r\n        })\r\n        setFoodItems(newFoodItems)\r\n    }\r\n\r\n    function toNumberFormat(string){\r\n        let stringCopy = string.slice()\r\n        stringCopy = stringCopy.replace(',', '.')\r\n        const number = parseFloat(stringCopy)\r\n        return Number.isNaN(number) ? -1 : number\r\n    }\r\n\r\n    function calculateIE(){\r\n        const ERROR_MESSAGE = 'ein oder mehrere Werte sind nicht gültig'\r\n\r\n        function areItemsTypeofNumber(...items){\r\n            for(const item of items)\r\n                if(toNumberFormat(item) === -1) return false\r\n            return true\r\n        }\r\n\r\n        function calculateKE(foodItem){\r\n            if(!areItemsTypeofNumber(foodItem.grams, foodItem.carbohydratesPer100Grams)) {\r\n                alert(ERROR_MESSAGE)\r\n                return 0\r\n            }\r\n\r\n            return (toNumberFormat(foodItem.grams) * (toNumberFormat(foodItem.carbohydratesPer100Grams) / 100)) / 10\r\n        }\r\n\r\n        function calculateCorrectionInsuline(bloodSugar, targetBloodSugar, correctionFactor){\r\n            if(!areItemsTypeofNumber(bloodSugar, targetBloodSugar, correctionFactor)){\r\n                if(bloodSugar !== '')\r\n                    alert(ERROR_MESSAGE)\r\n                return 0\r\n            }\r\n            const correctionInsulin = (toNumberFormat(bloodSugar) - toNumberFormat(targetBloodSugar)) /\r\n                toNumberFormat(correctionFactor)\r\n            return correctionInsulin\r\n        }\r\n\r\n        // correction insulin\r\n        const correctionInsulin = calculateCorrectionInsuline(bloodSugar, targetBloodSugar, correctionFactor)\r\n        setTotalCorrectionInsulin(Math.round(correctionInsulin * 10) / 10)\r\n\r\n        // total KE | totalIntermealKE\r\n        let KE = 0, intermealKE = 0\r\n        for(const foodItem of foodItems){\r\n            KE += calculateKE(foodItem)\r\n            intermealKE += foodItem.isIntermeal ? calculateKE(foodItem) : 0\r\n        }\r\n        setTotalKE(Math.round(KE * 10) / 10)\r\n        setTotalIntermealKE(Math.round(intermealKE * 10) / 10)\r\n        setTotalMainMealKE(Math.round((KE - intermealKE) * 10) / 10)\r\n        \r\n        // total IE\r\n        if(!areItemsTypeofNumber(carbohydrateFactor)) {\r\n            alert(ERROR_MESSAGE)\r\n            return -1\r\n        }\r\n\r\n        let IE = KE * toNumberFormat(carbohydrateFactor)\r\n        IE += correctionInsulin\r\n        IE = Math.round(IE * 10) / 10\r\n\r\n        setTotalIE(IE)\r\n        outputRef.current.scrollIntoView({smooth:true})\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Insulin Rechner</h1>\r\n\r\n            <p>\r\n                <button\r\n                    className='load-data-button'\r\n                    onClick = {loadData}\r\n                >Daten laden</button>\r\n            </p>\r\n\r\n            <FixedInformationSection \r\n                setBloodSugar={setBloodSugar}\r\n                setTargetBloodSugar={setTargetBloodSugar}\r\n                setCorrectionFactor={setCorrectionFactor}\r\n                setCarbohydrateFactor={setCarbohydrateFactor}\r\n                bloodSugar={bloodSugar}\r\n                targetBloodSugar={targetBloodSugar}\r\n                correctionFactor={correctionFactor}\r\n                carbohydrateFactor={carbohydrateFactor}\r\n            />\r\n            <ListSection \r\n                foodItems={foodItems}\r\n                addNewFoodItem={addNewFoodItem}\r\n                handleIsIntermealChange={handleIsIntermealChange}\r\n                handleChange={handleChange}\r\n                deleteFoodItem={deleteFoodItem}\r\n                handleSuggestionClick={handleSuggestionClick}\r\n            />\r\n\r\n            <button\r\n                className='save-data-button'\r\n                onClick = {saveData}\r\n            >Daten speichen</button>\r\n\r\n            <button \r\n                className='calculateIE-button'\r\n                onClick={calculateIE}\r\n            >Berechne IE</button>\r\n            \r\n            \r\n            <Output \r\n                totalIE={totalIE}\r\n                totalMainMealKE={totalMainMealKE}\r\n                totalIntermealKE={totalIntermealKE}\r\n                totalKE={totalKE}\r\n                totalCorrectionInsulin={totalCorrectionInsulin}\r\n                outputRef={outputRef}\r\n            />\r\n        </div>  \r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from './App.js'\r\n\r\n\r\nfunction hideLoadingScreen(){\r\n    const loadingScreen = document.getElementById('loadingScreen');\r\n    loadingScreen.classList.add('hide')\r\n}\r\n\r\nReactDOM.render(\r\n    <App \r\n        hideLoadingScreen={hideLoadingScreen}\r\n    />, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}