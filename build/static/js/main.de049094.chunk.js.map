{"version":3,"sources":["Components/Input.js","Components/FixedInformationSection.js","Components/Suggestion.js","Components/SuggestionList.js","Components/FoodItem.js","Components/ListSection.js","Components/Output.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Input","id","type","name","value","onChange","onFocus","description","placeholder","unit","autoComplete","event","FixedInformationSection","setBloodSugar","setDayTimeChoice","setTargetBloodSugar","setCorrectionFactor","setCarbohydrateFactor","bloodSugar","dayTimeChoice","targetBloodSugar","correctionFactor","carbohydrateFactor","refreshPage","className","toString","target","onClick","Suggestion","suggestionText","handleSuggestionClick","SuggestionList","allSuggestions","searchingText","hideSuggestionList","matchingSuggestions","filter","slice","length","toLowerCase","map","key","Math","random","FoodItem","isPer100gSlideActive","per100gSlide","perPieceSlide","foodNameSuggestionsForPer100gSlide","foodNameSuggestionsForPerPieceSlide","handleIsIntermealChange","handlePer100gSlideValueChange","handlePerPieceSlideValueChange","deleteFoodItem","handleSlideChange","scrollFoodItemUp","per100gSlideHtml","checked","isIntermeal","setTimeout","shouldDisplaySuggestions","grams","carbohydratesPer100Grams","KE","perPieceSlideHtml","numberOfPieces","carbohydratesPerPiece","ListSection","foodItems","addNewFoodItem","element","Output","totalIE","totalMainMealKE","totalIntermealKE","totalKE","totalCorrectionInsulin","outputRef","ref","style","fontWeight","useLocalStorage","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","PREFIX","lastDayTime","App","lastSavedData","setLastSavedData","setFoodNameSuggestionsForPer100gSlide","setFoodNameSuggestionsForPerPieceSlide","getDayTime","setFoodItems","setTotalIE","setTotalKE","setTotalCorrectionInsulin","setTotalIntermealKE","setTotalMainMealKE","useRef","getCurrentDayTime","window","location","reload","foodItemId","inputPosY","document","getElementById","getBoundingClientRect","y","targetPosY","innerHeight","scroll","scrollMore","capitalize","string","toUpperCase","Date","toLocaleTimeString","split","hours","minutes","time","toNumberFormat","newFoodItems","foodItem","isNameValid","newFoodNameSuggestion","toAddFoodNameSuggestions","newFoodNameSuggestions","Array","isArray","NewFoodNameSuggestion","some","foodNameSuggestion","addNewFoodNameSuggestionsToPer100gSlide","removeItem","toDeleteFoodNameSuggestion","removeIdx","idx","splice","deleteFoodNameSuggestionFromPer100gSlide","hasNameChanged","addNewFoodNameSuggestionsToPerPieceSlide","deleteFoodNameSuggestionFromPerPieceSlide","stringCopy","replace","number","parseFloat","Number","isNaN","setInterval","activeSlideIdx","focus","marginBottom","shouldScroll","shouldDisplayError","ERROR_MESSAGE","areItemsTypeofNumber","items","every","item","calculateKE","alert","calculateCorrectionInsulin","correctionInsulin","round","intermealKE","foodItemKEList","foodItemKE","push","index","IE","scrollToBottom","ReactDOM","render"],"mappings":"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","file":"static/js/main.de049094.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../css/style.css'\r\n\r\nexport default function Input(\r\n    {id, type='text', name='',value='', onChange='', onFocus='', description='', placeholder='', unit=''}) {\r\n    return (\r\n        <div>\r\n            <label> \r\n                {description}\r\n            </label>\r\n            <br />\r\n            <input\r\n                type={type}\r\n                autoComplete='off'\r\n                id={id}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange === '' ? () => 0 : (event) => onChange(event)}\r\n                onFocus={onFocus === '' ? () => 0: () => onFocus()}\r\n            ></input>\r\n            <label>\r\n                {unit}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\nimport Input from './Input'\r\n\r\nexport default function FixedInformationSection({\r\n  setBloodSugar,\r\n  setDayTimeChoice,\r\n  setTargetBloodSugar,\r\n  setCorrectionFactor,\r\n  setCarbohydrateFactor,\r\n  bloodSugar,\r\n  dayTimeChoice,\r\n  targetBloodSugar,\r\n  correctionFactor,\r\n  carbohydrateFactor,\r\n\r\n  refreshPage,\r\n}) {\r\n  return (\r\n    <div className='space-around'>\r\n      <Input\r\n        name='BloodSugar'\r\n        type='number'\r\n        value={bloodSugar.toString()}\r\n        description='Blutzucker'\r\n        unit='mg/dl'\r\n        onChange={event => setBloodSugar(event.target.value)}\r\n      />\r\n\r\n      <p className='center-elements day-time-choice-buttons'>\r\n        <button\r\n          className={`automatic-day-time-choice-button \r\n                    ${dayTimeChoice === 'automatic' && 'active-button'}`}\r\n          onClick={() => {\r\n            setDayTimeChoice('automatic')\r\n            refreshPage()\r\n          }}>\r\n          Automatic\r\n        </button>\r\n\r\n        <button\r\n          className={`morning-day-time-choice-button \r\n                    ${dayTimeChoice === 'morning' && 'active-button'}`}\r\n          onClick={() => {\r\n            setDayTimeChoice('morning')\r\n            refreshPage()\r\n          }}>\r\n          Morgens\r\n        </button>\r\n\r\n        <button\r\n          className={`midday-day-time-choice-button \r\n                    ${dayTimeChoice === 'midday' && 'active-button'}`}\r\n          onClick={() => {\r\n            setDayTimeChoice('midday')\r\n            refreshPage()\r\n          }}>\r\n          Mittags\r\n        </button>\r\n\r\n        <button\r\n          className={`evening-day-time-choice-button \r\n                    ${dayTimeChoice === 'evening' && 'active-button'}`}\r\n          onClick={() => {\r\n            setDayTimeChoice('evening')\r\n            refreshPage()\r\n          }}>\r\n          Abends\r\n        </button>\r\n      </p>\r\n\r\n      <Input\r\n        name='TargetBloodSugar'\r\n        type='number'\r\n        value={targetBloodSugar}\r\n        description='Blutzucker Zielwert'\r\n        unit='mg/dl'\r\n        onChange={event => setTargetBloodSugar(event.target.value)}\r\n      />\r\n      <Input\r\n        name='CorrectionFactor'\r\n        type='number'\r\n        value={correctionFactor}\r\n        description='Korrektur-Faktor'\r\n        unit='mg/dl'\r\n        onChange={event => setCorrectionFactor(event.target.value)}\r\n      />\r\n      <Input\r\n        name='CarbohydrateFactor'\r\n        type='number'\r\n        value={carbohydrateFactor}\r\n        description='KE-Faktor'\r\n        onChange={event => setCarbohydrateFactor(event.target.value)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Suggestion({suggestionText, handleSuggestionClick}) {\r\n    return (\r\n        <li\r\n            onClick={() => handleSuggestionClick(suggestionText)}\r\n        >\r\n            {suggestionText}\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Suggestion from './Suggestion.js'\r\n\r\nexport default function SuggestionList(\r\n    {allSuggestions, searchingText, handleSuggestionClick, hideSuggestionList}) {\r\n    \r\n    const matchingSuggestions = searchingText === '' ? [] : allSuggestions.filter(suggestionText => {\r\n        const potentialMatch = suggestionText.slice(0, searchingText.length)\r\n        return potentialMatch.toLowerCase() === searchingText.toLowerCase()\r\n    })\r\n    \r\n    return (\r\n        <div>\r\n            {matchingSuggestions.length !== 0 && <ul className='suggestion-list'>\r\n            \r\n                <button\r\n                    className='hide-suggestion-list-button'\r\n                    onClick={() => hideSuggestionList()}\r\n                ></button>\r\n\r\n                {matchingSuggestions.map(suggestionText => <Suggestion \r\n                    key={Math.random()} \r\n                    suggestionText={suggestionText} \r\n                    handleSuggestionClick={handleSuggestionClick}\r\n                />)}\r\n            </ul>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../css/style.css'\r\nimport Input from './Input'\r\nimport SuggestionList from './SuggestionList.js'\r\n\r\nexport default function FoodItem(\r\n    {id,\r\n    isPer100gSlideActive=true,\r\n    per100gSlide={},\r\n    perPieceSlide={},\r\n\r\n    foodNameSuggestionsForPer100gSlide,\r\n    foodNameSuggestionsForPerPieceSlide,\r\n    handleIsIntermealChange, \r\n    handlePer100gSlideValueChange,\r\n    handlePerPieceSlideValueChange,\r\n    deleteFoodItem,\r\n    handleSuggestionClick,\r\n    handleSlideChange,\r\n    hideSuggestionList,\r\n    scrollFoodItemUp\r\n    }) {\r\n\r\n    const per100gSlideHtml = \r\n    <>\r\n        <label className='intermeal-checkbox'>\r\n                <input\r\n                    type = 'checkbox'\r\n                    checked = {per100gSlide.isIntermeal}\r\n                    onChange = {() => handleIsIntermealChange(id, 1)}\r\n                ></input> ZM?\r\n        </label>\r\n\r\n        <Input \r\n            id = {`${id}-per100gSlideName`}\r\n            name = 'name'\r\n            description = 'Name'\r\n            value = {per100gSlide.name}\r\n            onChange = {(event) => handlePer100gSlideValueChange(event)}\r\n            onFocus = {() => setTimeout(() => {\r\n                scrollFoodItemUp(id, true)\r\n            }, 200) }\r\n        />\r\n        {per100gSlide.shouldDisplaySuggestions && <SuggestionList \r\n            allSuggestions={foodNameSuggestionsForPer100gSlide}\r\n            searchingText={per100gSlide.name}\r\n            handleSuggestionClick={(suggestionText) => handleSuggestionClick(suggestionText, id, true)}\r\n            hideSuggestionList={() => hideSuggestionList(id, true)}\r\n        />}\r\n\r\n        <Input\r\n            id = {`${id}-grams`}\r\n            name = 'grams'\r\n            type='number'\r\n            description = 'Gramm'\r\n            value = {per100gSlide.grams}\r\n            onChange = {(event) => handlePer100gSlideValueChange(event)}\r\n        />\r\n        <Input\r\n            id = {`${id}-carbohydratesPer100Grams`}\r\n            name = 'carbohydratesPer100Grams'\r\n            type='number'\r\n            description = 'Kohlenhydrate pro 100g'\r\n            value = {per100gSlide.carbohydratesPer100Grams}\r\n            onChange = {(event) => handlePer100gSlideValueChange(event)}\r\n        />\r\n        \r\n        {typeof per100gSlide.KE === 'number' && \r\n            <label\r\n                className='food-item-ke-label'\r\n            >{`${per100gSlide.KE} KE`}</label>}\r\n    </>\r\n\r\n    const perPieceSlideHtml = \r\n    <>\r\n         <label className='intermeal-checkbox'>\r\n                <input\r\n                    type = 'checkbox'\r\n                    checked = {perPieceSlide.isIntermeal}\r\n                    onChange = {() => handleIsIntermealChange(id, 2)}\r\n                ></input> ZM?\r\n        </label>\r\n\r\n        <Input \r\n            id = {`${id}-perPieceSlideName`}\r\n            name = 'name'\r\n            description = 'Name'\r\n            value = {perPieceSlide.name}\r\n            onChange = {(event) => handlePerPieceSlideValueChange(event)}\r\n            onFocus = {() => setTimeout(() => {\r\n                scrollFoodItemUp(id, false)\r\n            }, 200) }\r\n        />\r\n        {perPieceSlide.shouldDisplaySuggestions && <SuggestionList \r\n            allSuggestions={foodNameSuggestionsForPerPieceSlide}\r\n            searchingText={perPieceSlide.name}\r\n            handleSuggestionClick={(suggestionText) => handleSuggestionClick(suggestionText, id, false)}\r\n            hideSuggestionList={() => hideSuggestionList(id, false)}\r\n        />}\r\n\r\n        <Input \r\n            id = {`${id}-numberOfPieces`}\r\n            name = 'numberOfPieces'\r\n            type='number'\r\n            description = 'Anzahl'\r\n            value = {perPieceSlide.numberOfPieces}\r\n            onChange = {(event) => handlePerPieceSlideValueChange(event)}\r\n        />\r\n\r\n        <Input \r\n            id = {`${id}-carbohydratesPerPiece`}\r\n            name = 'carbohydratesPerPiece'\r\n            type='number'\r\n            description = 'Kohlenhydrate pro Stück'\r\n            value = {perPieceSlide.carbohydratesPerPiece}\r\n            onChange = {(event) => handlePerPieceSlideValueChange(event)}\r\n        />\r\n\r\n        {typeof perPieceSlide.KE === 'number' && \r\n            <label\r\n                className='food-item-ke-label'\r\n            >{`${perPieceSlide.KE} KE`}</label>}\r\n    </>\r\n\r\n    return (\r\n        <div>\r\n            <p className='center-elements'>\r\n                <button\r\n                    className={`per-100g-button ${isPer100gSlideActive && 'active-button'}`}\r\n                    onClick={() => handleSlideChange(id, true)}\r\n                >pro 100g</button>\r\n                \r\n                <button\r\n                    className={`per-piece-button ${!isPer100gSlideActive && 'active-button'}`}\r\n                    onClick={() => handleSlideChange(id, false)}\r\n                >pro Stück</button>\r\n            </p>\r\n\r\n            <div className='space-around'>\r\n                <button\r\n                    className = 'delete-food-item-button'\r\n                    onClick={() => deleteFoodItem(id)}\r\n                ></button>\r\n\r\n                {isPer100gSlideActive ? per100gSlideHtml : perPieceSlideHtml}\r\n            </div>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\nimport FoodItem from './FoodItem'\r\n\r\nexport default function ListSection({\r\n  foodItems = [],\r\n  foodNameSuggestionsForPer100gSlide = [],\r\n  foodNameSuggestionsForPerPieceSlide = [],\r\n  addNewFoodItem,\r\n  handleIsIntermealChange,\r\n  handlePer100gSlideValueChange,\r\n  handlePerPieceSlideValueChange,\r\n  deleteFoodItem,\r\n  handleSuggestionClick,\r\n  handleSlideChange,\r\n  hideSuggestionList,\r\n  scrollFoodItemUp,\r\n}) {\r\n  return (\r\n    <div>\r\n      <h3>Elemente</h3>\r\n      {foodItems.map(element => (\r\n        <FoodItem\r\n          key={element.key}\r\n          id={element.id}\r\n          isPer100gSlideActive={element.isPer100gSlideActive}\r\n          per100gSlide={element.per100gSlide}\r\n          perPieceSlide={element.perPieceSlide}\r\n          foodNameSuggestionsForPer100gSlide={\r\n            foodNameSuggestionsForPer100gSlide\r\n          }\r\n          foodNameSuggestionsForPerPieceSlide={\r\n            foodNameSuggestionsForPerPieceSlide\r\n          }\r\n          handleIsIntermealChange={handleIsIntermealChange}\r\n          handlePer100gSlideValueChange={handlePer100gSlideValueChange}\r\n          handlePerPieceSlideValueChange={handlePerPieceSlideValueChange}\r\n          deleteFoodItem={deleteFoodItem}\r\n          handleSuggestionClick={handleSuggestionClick}\r\n          handleSlideChange={handleSlideChange}\r\n          hideSuggestionList={hideSuggestionList}\r\n          scrollFoodItemUp={scrollFoodItemUp}\r\n        />\r\n      ))}\r\n\r\n      <p>\r\n        <button\r\n          className='add-new-food-item-button'\r\n          onClick={() => addNewFoodItem()}></button>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\n\r\nexport default function Output(\r\n    {totalIE, totalMainMealKE, totalIntermealKE, totalKE, totalCorrectionInsulin, outputRef}) {\r\n    return (\r\n        <div ref={outputRef}>\r\n            {!(totalIE === '' || totalIE == null || totalIE <= 0) ? \r\n                <div>\r\n                    <hr />\r\n\r\n                    <div className='space-around'>\r\n                        \r\n                        <p className='output' >\r\n                            Hauptmahlzeit-KE : {totalMainMealKE} KE <br />\r\n                            Zwischenmahlzeit-KE : {totalIntermealKE} KE <br />\r\n                            Gesamt-KE: {totalKE} KE <br />\r\n                            <br />\r\n                            Korrektur-Insulin: {totalCorrectionInsulin} IE  <br />\r\n                            <span style={{fontWeight: 'bold'}}> Gesamt-Insulin: {totalIE} IE </span>\r\n                        </p>\r\n                            \r\n                    </div>\r\n                </div>\r\n            : ''}\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nconst PREFIX = \"insulin-calculator-\"\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    // get value\r\n    const prefixedKey = PREFIX + key\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if(jsonValue != null) return JSON.parse(jsonValue)\r\n        if(typeof initialValue === \"function\"){\r\n            return initialValue()\r\n        } else{\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    // save value\r\n    useEffect(() =>{\r\n        if(value != null)\r\n            localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [/* prefixedKey, */ value])\r\n\r\n    return [value, setValue]\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Link, animateScroll as scroll } from 'react-scroll'\r\n\r\nimport './css/style.css'\r\nimport FixedInformationSection from './Components/FixedInformationSection'\r\nimport ListSection from './Components/ListSection'\r\nimport Output from './Components/Output.js'\r\n\r\nimport useLocalStorage from './hooks/useLocalStorage.js'\r\n\r\nconst PREFIX = 'insulin-calculator-'\r\n\r\nlet lastDayTime = ''\r\n\r\nexport default function App() {\r\n  const [dayTimeChoice, setDayTimeChoice] = useLocalStorage(\r\n    'dayTimeChoice',\r\n    'automatic'\r\n  )\r\n  const [lastSavedData, setLastSavedData] = useLocalStorage('lastSavedData', {\r\n    foodItems: [],\r\n  })\r\n  const [\r\n    foodNameSuggestionsForPer100gSlide,\r\n    setFoodNameSuggestionsForPer100gSlide,\r\n  ] = useLocalStorage('foodNameSuggestions-per100gSlide', [])\r\n\r\n  const [\r\n    foodNameSuggestionsForPerPieceSlide,\r\n    setFoodNameSuggestionsForPerPieceSlide,\r\n  ] = useLocalStorage('foodNameSuggestions-perPieceSlide', [])\r\n\r\n  const [bloodSugar, setBloodSugar] = useState('')\r\n  const [targetBloodSugar, setTargetBloodSugar] = useLocalStorage(\r\n    `${getDayTime()}-targetBloodSugar`\r\n  )\r\n  const [correctionFactor, setCorrectionFactor] = useLocalStorage(\r\n    `${getDayTime()}-correctionFactor`\r\n  )\r\n  const [carbohydrateFactor, setCarbohydrateFactor] = useLocalStorage(\r\n    `${getDayTime()}-carbohydrateFactor`\r\n  )\r\n\r\n  const [foodItems, setFoodItems] = useLocalStorage('foodItems', [])\r\n\r\n  const [totalIE, setTotalIE] = useState('')\r\n  const [totalKE, setTotalKE] = useState('')\r\n  const [totalCorrectionInsulin, setTotalCorrectionInsulin] = useState('')\r\n  const [totalIntermealKE, setTotalIntermealKE] = useState('')\r\n  const [totalMainMealKE, setTotalMainMealKE] = useState('')\r\n\r\n  const outputRef = useRef()\r\n\r\n  useEffect(() => {\r\n    lastDayTime = getCurrentDayTime()\r\n\r\n    // update every minute\r\n    setInterval(() => {\r\n      if (lastDayTime !== getCurrentDayTime()) {\r\n        refreshPage()\r\n      }\r\n    }, 60000)\r\n  }, [])\r\n\r\n  function getDayTime() {\r\n    if (dayTimeChoice === 'automatic') return getCurrentDayTime()\r\n    else return dayTimeChoice\r\n  }\r\n\r\n  function refreshPage() {\r\n    window.location.reload()\r\n  }\r\n\r\n  function scrollFoodItemUp(id, isPer100gSlideActive) {\r\n    const foodItemId = isPer100gSlideActive\r\n      ? `${id}-per100gSlideName`\r\n      : `${id}-perPieceSlideName`\r\n    const inputPosY = document\r\n      .getElementById(foodItemId)\r\n      .getBoundingClientRect().y\r\n    const targetPosY = 0.45 * window.innerHeight\r\n    scroll.scrollMore(inputPosY - targetPosY)\r\n  }\r\n\r\n  function hideSuggestionList(id, isPer100gSlideActive) {\r\n    const newFoodItems = foodItems.map(foodItem => {\r\n      if (id === foodItem.id) {\r\n        const per100gSlide = {\r\n          ...foodItem.per100gSlide,\r\n          shouldDisplaySuggestions: false,\r\n        }\r\n        const perPieceSlide = {\r\n          ...foodItem.perPieceSlide,\r\n          shouldDisplaySuggestions: false,\r\n        }\r\n\r\n        if (isPer100gSlideActive)\r\n          return { ...foodItem, per100gSlide: per100gSlide }\r\n        else return { ...foodItem, perPieceSlide: perPieceSlide }\r\n      }\r\n      return foodItem\r\n    })\r\n    setFoodItems(newFoodItems)\r\n  }\r\n\r\n  function handleSlideChange(id, isPer100gSlideActive) {\r\n    const newFoodItems = foodItems.map(foodItem => {\r\n      if (id === foodItem.id) {\r\n        return { ...foodItem, isPer100gSlideActive: isPer100gSlideActive }\r\n      }\r\n\r\n      return foodItem\r\n    })\r\n    setFoodItems(newFoodItems)\r\n  }\r\n\r\n  function capitalize(string) {\r\n    if (typeof string !== 'string') return ''\r\n    const capitalizedString = `${string[0].toUpperCase()}${string.slice(1)}`\r\n    return capitalizedString\r\n  }\r\n\r\n  function addNewFoodNameSuggestionsToPer100gSlide(toAddFoodNameSuggestions) {\r\n    let newFoodNameSuggestions = toAddFoodNameSuggestions\r\n    if (!Array.isArray(toAddFoodNameSuggestions))\r\n      newFoodNameSuggestions = [toAddFoodNameSuggestions]\r\n\r\n    newFoodNameSuggestions = newFoodNameSuggestions.filter(\r\n      NewFoodNameSuggestion => {\r\n        const isAlreadyExisting = foodNameSuggestionsForPer100gSlide.some(\r\n          foodNameSuggestion => NewFoodNameSuggestion === foodNameSuggestion\r\n        )\r\n        return !isAlreadyExisting\r\n      }\r\n    )\r\n    if (newFoodNameSuggestions.length === 0) return\r\n\r\n    newFoodNameSuggestions = [\r\n      ...foodNameSuggestionsForPer100gSlide,\r\n      ...newFoodNameSuggestions,\r\n    ]\r\n    setFoodNameSuggestionsForPer100gSlide(newFoodNameSuggestions)\r\n  }\r\n\r\n  function deleteFoodNameSuggestionFromPer100gSlide(\r\n    toDeleteFoodNameSuggestion\r\n  ) {\r\n    let removeIdx\r\n    for (let idx = 0; idx < foodNameSuggestionsForPer100gSlide.length; idx++) {\r\n      if (\r\n        toDeleteFoodNameSuggestion === foodNameSuggestionsForPer100gSlide[idx]\r\n      ) {\r\n        removeIdx = idx\r\n        break\r\n      }\r\n    }\r\n    if (removeIdx == null) return\r\n\r\n    const newFoodNameSuggestions = [...foodNameSuggestionsForPer100gSlide]\r\n    newFoodNameSuggestions.splice(removeIdx, 1)\r\n    setFoodNameSuggestionsForPer100gSlide(newFoodNameSuggestions)\r\n  }\r\n\r\n  function addNewFoodNameSuggestionsToPerPieceSlide(toAddFoodNameSuggestions) {\r\n    let newFoodNameSuggestions = toAddFoodNameSuggestions\r\n    if (!Array.isArray(toAddFoodNameSuggestions))\r\n      newFoodNameSuggestions = [toAddFoodNameSuggestions]\r\n\r\n    newFoodNameSuggestions = newFoodNameSuggestions.filter(\r\n      NewFoodNameSuggestion => {\r\n        const isAlreadyExisting = foodNameSuggestionsForPerPieceSlide.some(\r\n          foodNameSuggestion => NewFoodNameSuggestion === foodNameSuggestion\r\n        )\r\n        return !isAlreadyExisting\r\n      }\r\n    )\r\n    if (newFoodNameSuggestions.length === 0) return\r\n\r\n    newFoodNameSuggestions = [\r\n      ...foodNameSuggestionsForPerPieceSlide,\r\n      ...newFoodNameSuggestions,\r\n    ]\r\n    setFoodNameSuggestionsForPerPieceSlide(newFoodNameSuggestions)\r\n  }\r\n\r\n  function deleteFoodNameSuggestionFromPerPieceSlide(\r\n    toDeleteFoodNameSuggestion\r\n  ) {\r\n    let removeIdx\r\n    for (let idx = 0; idx < foodNameSuggestionsForPerPieceSlide.length; idx++) {\r\n      if (\r\n        toDeleteFoodNameSuggestion === foodNameSuggestionsForPerPieceSlide[idx]\r\n      ) {\r\n        removeIdx = idx\r\n        break\r\n      }\r\n    }\r\n    if (removeIdx == null) return\r\n\r\n    const newFoodNameSuggestions = [...foodNameSuggestionsForPerPieceSlide]\r\n    newFoodNameSuggestions.splice(removeIdx, 1)\r\n    setFoodNameSuggestionsForPerPieceSlide(newFoodNameSuggestions)\r\n  }\r\n\r\n  function clearData() {\r\n    setFoodItems([])\r\n    setTotalIE(0)\r\n  }\r\n\r\n  function saveData() {\r\n    const newData = {\r\n      foodItems: foodItems,\r\n    }\r\n    setLastSavedData(newData)\r\n  }\r\n\r\n  function loadData() {\r\n    if (lastSavedData == null) return\r\n    const { foodItems } = lastSavedData\r\n\r\n    setFoodItems(foodItems)\r\n  }\r\n\r\n  function handleSuggestionClick(suggestionText, id, isPer100gSlideActive) {\r\n    if (isPer100gSlideActive) document.getElementById(`${id}-grams`).focus()\r\n    else document.getElementById(`${id}-numberOfPieces`).focus()\r\n\r\n    const event = { target: { name: 'name', value: suggestionText, id: id } }\r\n    isPer100gSlideActive\r\n      ? handlePer100gSlideValueChange(event)\r\n      : handlePerPieceSlideValueChange(event)\r\n  }\r\n\r\n  function getCurrentDayTime() {\r\n    const [hours, minutes] = new Date().toLocaleTimeString().split(':')\r\n    const time = toNumberFormat(hours) + toNumberFormat(minutes) / 60\r\n    let dayTime = ''\r\n\r\n    if (time <= 11.5) {\r\n      dayTime = 'morning'\r\n    } else if (time <= 16) {\r\n      dayTime = 'midday'\r\n    } else {\r\n      dayTime = 'evening'\r\n    }\r\n\r\n    return dayTime\r\n  }\r\n\r\n  function addNewFoodItem() {\r\n    const id = Math.random()\r\n    const newFoodItems = [\r\n      ...foodItems,\r\n      {\r\n        key: Math.random(),\r\n        id: id,\r\n        isPer100gSlideActive: true,\r\n        per100gSlide: {\r\n          name: '',\r\n          grams: '',\r\n          carbohydratesPer100Grams: '',\r\n          KE: '',\r\n          isIntermeal: false,\r\n          shouldDisplaySuggestions: true,\r\n        },\r\n        perPieceSlide: {\r\n          name: '',\r\n          numberOfPieces: '',\r\n          carbohydratesPerPiece: '',\r\n          KE: '',\r\n          isIntermeal: false,\r\n          shouldDisplaySuggestions: true,\r\n        },\r\n      },\r\n    ]\r\n    setFoodItems(newFoodItems)\r\n\r\n    setTimeout(() => {\r\n      scroll.scrollMore(255)\r\n    }, 100)\r\n  }\r\n\r\n  function deleteFoodItem(id) {\r\n    let removeIdx\r\n    for (let idx = 0; idx < foodItems.length; idx++) {\r\n      if (id === foodItems[idx].id) {\r\n        removeIdx = idx\r\n        break\r\n      }\r\n    }\r\n\r\n    const newFoodItems = [...foodItems]\r\n    newFoodItems.splice(removeIdx, 1)\r\n    setFoodItems(newFoodItems)\r\n  }\r\n\r\n  function handlePer100gSlideValueChange(event) {\r\n    const { name, value } = event.target\r\n\r\n    let { id } = event.target\r\n    if (typeof id === 'string') {\r\n      id = id.split('-')[0]\r\n      id = toNumberFormat(id)\r\n    }\r\n\r\n    if (value[value.length - 1] === '-') return\r\n    const newFoodItems = foodItems.map(foodItem => {\r\n      if (id !== foodItem.id) return foodItem\r\n\r\n      // getting the carbohydratesPer100Grams with the name from localStorage\r\n      // if they exist set the carbohydratesPer100Grams input value\r\n      if (name === 'name') {\r\n        scrollFoodItemUp(id, true)\r\n\r\n        const prefixedKey = `${PREFIX}foodItem-${value.toLowerCase()}-carbohydratesPer100Grams`\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if (jsonValue != null) {\r\n          const carbohydratesPer100Grams = JSON.parse(jsonValue)\r\n\r\n          const per100gSlide = {\r\n            ...foodItem.per100gSlide,\r\n            [name]: value,\r\n            shouldDisplaySuggestions: false,\r\n            carbohydratesPer100Grams: carbohydratesPer100Grams,\r\n          }\r\n\r\n          return { ...foodItem, per100gSlide: per100gSlide }\r\n        }\r\n      }\r\n\r\n      // storing the carbohydratesPer100Grams with name as a key in localStorage\r\n      // storing a new foodNameSuggestion in localStorage\r\n      const isNameValid =\r\n        foodItem.per100gSlide.name !== '' &&\r\n        foodItem.per100gSlide.name != null &&\r\n        foodItem.per100gSlide.name[0] !== '.'\r\n      if (name === 'carbohydratesPer100Grams' && isNameValid) {\r\n        const prefixedKey = `${PREFIX}foodItem-${foodItem.per100gSlide.name.toLowerCase()}-carbohydratesPer100Grams`\r\n        const newFoodNameSuggestion = capitalize(\r\n          foodItem.per100gSlide.name.toLowerCase()\r\n        )\r\n        if (value !== '') {\r\n          // store foodItems carbohydratesPer100Grams\r\n          localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n          // foodNameSuggestion\r\n          addNewFoodNameSuggestionsToPer100gSlide(newFoodNameSuggestion)\r\n        } else {\r\n          localStorage.removeItem(prefixedKey)\r\n          // foodNameSuggestion\r\n          deleteFoodNameSuggestionFromPer100gSlide(newFoodNameSuggestion)\r\n        }\r\n      }\r\n      const hasNameChanged = name === 'name'\r\n      const per100gSlide = {\r\n        ...foodItem.per100gSlide,\r\n        [name]: value,\r\n        shouldDisplaySuggestions: hasNameChanged,\r\n      }\r\n      return { ...foodItem, per100gSlide: per100gSlide }\r\n    })\r\n    setFoodItems(newFoodItems)\r\n  }\r\n\r\n  function handlePerPieceSlideValueChange(event) {\r\n    const { name, value } = event.target\r\n\r\n    let { id } = event.target\r\n    if (typeof id === 'string') {\r\n      id = id.split('-')[0]\r\n      id = toNumberFormat(id)\r\n    }\r\n\r\n    if (value[value.length - 1] === '-') return\r\n\r\n    const newFoodItems = foodItems.map(foodItem => {\r\n      // would not work with !==\r\n      if (id !== foodItem.id) return foodItem\r\n\r\n      // getting the carbohydratesPerPiece with the name from localStorage\r\n      // if they exist set the carbohydratesPerPiece input value\r\n      if (name === 'name') {\r\n        scrollFoodItemUp(id, false)\r\n\r\n        const prefixedKey = `${PREFIX}foodItem-${value.toLowerCase()}-carbohydratesPerPiece`\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if (jsonValue != null) {\r\n          const carbohydratesPerPiece = JSON.parse(jsonValue)\r\n\r\n          const perPieceSlide = {\r\n            ...foodItem.perPieceSlide,\r\n            [name]: value,\r\n            shouldDisplaySuggestions: false,\r\n            carbohydratesPerPiece: carbohydratesPerPiece,\r\n          }\r\n\r\n          return { ...foodItem, perPieceSlide: perPieceSlide }\r\n        }\r\n      }\r\n\r\n      // storing the carbohydratesPerPiece with name as a key in localStorage\r\n      // storing a new foodNameSuggestion in localStorage\r\n      const isNameValid =\r\n        foodItem.perPieceSlide.name !== '' &&\r\n        foodItem.perPieceSlide.name != null &&\r\n        foodItem.perPieceSlide.name[0] !== '.'\r\n      if (name === 'carbohydratesPerPiece' && isNameValid) {\r\n        const prefixedKey = `${PREFIX}foodItem-${foodItem.perPieceSlide.name.toLowerCase()}-carbohydratesPerPiece`\r\n        const newFoodNameSuggestion = capitalize(\r\n          foodItem.perPieceSlide.name.toLowerCase()\r\n        )\r\n        if (value !== '') {\r\n          // store foodItems carbohydratesPerPiece\r\n          localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n          // foodNameSuggestion\r\n          addNewFoodNameSuggestionsToPerPieceSlide(newFoodNameSuggestion)\r\n        } else {\r\n          localStorage.removeItem(prefixedKey)\r\n          // foodNameSuggestion\r\n          deleteFoodNameSuggestionFromPerPieceSlide(newFoodNameSuggestion)\r\n        }\r\n      }\r\n      const hasNameChanged = name === 'name'\r\n      const perPieceSlide = {\r\n        ...foodItem.perPieceSlide,\r\n        [name]: value,\r\n        shouldDisplaySuggestions: hasNameChanged,\r\n      }\r\n      return { ...foodItem, perPieceSlide: perPieceSlide }\r\n    })\r\n    setFoodItems(newFoodItems)\r\n  }\r\n\r\n  function handleIsIntermealChange(id, activeSlideIdx) {\r\n    const newFoodItems = foodItems.map(foodItem => {\r\n      if (id === foodItem.id) {\r\n        if (activeSlideIdx === 1) {\r\n          const per100gSlide = {\r\n            ...foodItem.per100gSlide,\r\n            isIntermeal: !foodItem.per100gSlide.isIntermeal,\r\n          }\r\n          return { ...foodItem, per100gSlide: per100gSlide }\r\n        } else {\r\n          const perPieceSlide = {\r\n            ...foodItem.perPieceSlide,\r\n            isIntermeal: !foodItem.perPieceSlide.isIntermeal,\r\n          }\r\n          return { ...foodItem, perPieceSlide: perPieceSlide }\r\n        }\r\n      }\r\n\r\n      return foodItem\r\n    })\r\n    setFoodItems(newFoodItems)\r\n  }\r\n\r\n  function toNumberFormat(string) {\r\n    if (typeof string === 'number') return string\r\n    if (typeof string !== 'string') return -1\r\n\r\n    let stringCopy = string.slice()\r\n    stringCopy = stringCopy.replace(',', '.')\r\n    const number = parseFloat(stringCopy)\r\n    return Number.isNaN(number) ? -1 : number\r\n  }\r\n\r\n  function calculateIE(shouldScroll = true, shouldDisplayError = true) {\r\n    const ERROR_MESSAGE = 'ein oder mehrere Werte sind nicht gültig'\r\n\r\n    function areItemsTypeofNumber(...items) {\r\n      return items.every(item => toNumberFormat(item) !== -1)\r\n    }\r\n\r\n    function calculateKE(foodItem) {\r\n      if (foodItem.isPer100gSlideActive) {\r\n        const grams = foodItem.per100gSlide.grams\r\n        const carbohydratesPer100Grams =\r\n          foodItem.per100gSlide.carbohydratesPer100Grams\r\n\r\n        if (!areItemsTypeofNumber(grams, carbohydratesPer100Grams)) {\r\n          if (shouldDisplayError) alert(ERROR_MESSAGE)\r\n          return 0\r\n        }\r\n\r\n        return (\r\n          (toNumberFormat(grams) *\r\n            (toNumberFormat(carbohydratesPer100Grams) / 100)) /\r\n          10\r\n        )\r\n      } else {\r\n        const numberOfPieces = foodItem.perPieceSlide.numberOfPieces\r\n        const carbohydratesPerPiece =\r\n          foodItem.perPieceSlide.carbohydratesPerPiece\r\n\r\n        if (!areItemsTypeofNumber(numberOfPieces, carbohydratesPerPiece)) {\r\n          if (shouldDisplayError) alert(ERROR_MESSAGE)\r\n          return 0\r\n        }\r\n\r\n        return (\r\n          (toNumberFormat(numberOfPieces) *\r\n            toNumberFormat(carbohydratesPerPiece)) /\r\n          10\r\n        )\r\n      }\r\n    }\r\n\r\n    function calculateCorrectionInsulin(\r\n      bloodSugar,\r\n      targetBloodSugar,\r\n      correctionFactor\r\n    ) {\r\n      if (\r\n        !areItemsTypeofNumber(bloodSugar, targetBloodSugar, correctionFactor)\r\n      ) {\r\n        if (bloodSugar !== '' && shouldDisplayError) alert(ERROR_MESSAGE)\r\n        return 0\r\n      }\r\n      const correctionInsulin =\r\n        (toNumberFormat(bloodSugar) - toNumberFormat(targetBloodSugar)) /\r\n        toNumberFormat(correctionFactor)\r\n      return correctionInsulin\r\n    }\r\n\r\n    // correction insulin\r\n    const correctionInsulin = calculateCorrectionInsulin(\r\n      bloodSugar,\r\n      targetBloodSugar,\r\n      correctionFactor\r\n    )\r\n    setTotalCorrectionInsulin(Math.round(correctionInsulin * 10) / 10)\r\n\r\n    // total KE | totalIntermealKE\r\n    let KE = 0,\r\n      intermealKE = 0\r\n    const foodItemKEList = []\r\n    for (const foodItem of foodItems) {\r\n      const foodItemKE = calculateKE(foodItem)\r\n      KE += foodItemKE\r\n      foodItemKEList.push(foodItemKE)\r\n      if (foodItem.isPer100gSlideActive)\r\n        intermealKE += foodItem.per100gSlide.isIntermeal ? foodItemKE : 0\r\n      else intermealKE += foodItem.perPieceSlide.isIntermeal ? foodItemKE : 0\r\n    }\r\n    setTotalKE(Math.round(KE * 10) / 10)\r\n    setTotalIntermealKE(Math.round(intermealKE * 10) / 10)\r\n    setTotalMainMealKE(Math.round((KE - intermealKE) * 10) / 10)\r\n    const newFoodItems = foodItems.map((foodItem, index) => {\r\n      const foodItemKE = Math.round(foodItemKEList[index] * 10) / 10\r\n\r\n      let newFoodItem\r\n      if (foodItem.isPer100gSlideActive)\r\n        newFoodItem = {\r\n          ...foodItem,\r\n          per100gSlide: {\r\n            ...foodItem.per100gSlide,\r\n            KE: foodItemKE,\r\n          },\r\n        }\r\n      else\r\n        newFoodItem = {\r\n          ...foodItem,\r\n          perPieceSlide: {\r\n            ...foodItem.perPieceSlide,\r\n            KE: foodItemKE,\r\n          },\r\n        }\r\n\r\n      return newFoodItem\r\n    })\r\n    setFoodItems(newFoodItems)\r\n\r\n    // total IE\r\n    if (!areItemsTypeofNumber(carbohydrateFactor)) {\r\n      if (shouldDisplayError) alert(ERROR_MESSAGE)\r\n      return -1\r\n    }\r\n\r\n    let IE = KE * toNumberFormat(carbohydrateFactor)\r\n    IE += correctionInsulin\r\n    IE = Math.round(IE * 10) / 10\r\n\r\n    setTotalIE(IE)\r\n\r\n    if (shouldScroll)\r\n      // needed because of async state setting\r\n      setTimeout(() => {\r\n        scroll.scrollToBottom()\r\n      }, 5)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Insulin Rechner</h1>\r\n      <p>\r\n        <button className='clear-data-button space-around' onClick={clearData}>\r\n          Daten löschen\r\n        </button>\r\n\r\n        <button className='load-data-button' onClick={loadData}>\r\n          Daten laden\r\n        </button>\r\n      </p>\r\n\r\n      <hr className='destop-hr new-section-hr' />\r\n\r\n      <FixedInformationSection\r\n        setBloodSugar={setBloodSugar}\r\n        setDayTimeChoice={setDayTimeChoice}\r\n        setTargetBloodSugar={setTargetBloodSugar}\r\n        setCorrectionFactor={setCorrectionFactor}\r\n        setCarbohydrateFactor={setCarbohydrateFactor}\r\n        bloodSugar={bloodSugar}\r\n        dayTimeChoice={dayTimeChoice}\r\n        targetBloodSugar={targetBloodSugar}\r\n        correctionFactor={correctionFactor}\r\n        carbohydrateFactor={carbohydrateFactor}\r\n        refreshPage={refreshPage}\r\n      />\r\n\r\n      <hr className='destop-hr new-section-hr' />\r\n\r\n      <ListSection\r\n        foodItems={foodItems}\r\n        foodNameSuggestionsForPer100gSlide={foodNameSuggestionsForPer100gSlide}\r\n        foodNameSuggestionsForPerPieceSlide={\r\n          foodNameSuggestionsForPerPieceSlide\r\n        }\r\n        addNewFoodItem={addNewFoodItem}\r\n        handleIsIntermealChange={handleIsIntermealChange}\r\n        handlePer100gSlideValueChange={handlePer100gSlideValueChange}\r\n        handlePerPieceSlideValueChange={handlePerPieceSlideValueChange}\r\n        deleteFoodItem={deleteFoodItem}\r\n        handleSuggestionClick={handleSuggestionClick}\r\n        handleSlideChange={handleSlideChange}\r\n        hideSuggestionList={hideSuggestionList}\r\n        scrollFoodItemUp={scrollFoodItemUp}\r\n      />\r\n\r\n      <p style={{ marginBottom: '20px' }}>\r\n        <button className='save-data-button space-around' onClick={saveData}>\r\n          Daten speichen\r\n        </button>\r\n\r\n        <button className='calculateIE-button' onClick={calculateIE}>\r\n          Berechne IE\r\n        </button>\r\n      </p>\r\n\r\n      <Output\r\n        totalIE={totalIE}\r\n        totalMainMealKE={totalMainMealKE}\r\n        totalIntermealKE={totalIntermealKE}\r\n        totalKE={totalKE}\r\n        totalCorrectionInsulin={totalCorrectionInsulin}\r\n        outputRef={outputRef}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from './App.js'\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}