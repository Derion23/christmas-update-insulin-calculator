{"version":3,"sources":["Components/Input.js","Components/FixedInformationSection.js","Components/Suggestion.js","Components/SuggestionList.js","Components/FoodItem.js","Components/ListSection.js","Components/Output.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Input","id","name","value","onChange","description","placeholder","unit","type","autoComplete","event","FixedInformationSection","setBloodSugar","setTargetBloodSugar","setCorrectionFactor","setCarbohydrateFactor","bloodSugar","targetBloodSugar","correctionFactor","carbohydrateFactor","toString","target","Suggestion","suggestionText","handleSuggestionClick","onClick","SuggestionList","allSuggestions","searchingText","matchingSuggestions","filter","slice","length","toLowerCase","className","map","key","Math","random","FoodItem","grams","carbohydratesPer100Grams","isIntermeal","foodNameSuggestions","handleIsIntermealChange","handleChange","deleteFoodItem","shouldDisplaySuggestions","checked","ListSection","foodItems","addNewFoodItem","element","Output","totalIE","totalMainMealKE","totalIntermealKE","totalKE","totalCorrectionInsulin","outputRef","ref","undefined","useLocalStorage","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","PREFIX","App","hideLoadingScreen","lastSavedData","setLastSavedData","setFoodNameSuggestions","getCurrentDayTime","setFoodItems","setTotalIE","setTotalKE","setTotalCorrectionInsulin","setTotalIntermealKE","setTotalMainMealKE","useRef","capitalize","string","toUpperCase","addNewFoodNameSuggestion","toAddFoodNameSuggestions","newFoodNameSuggestions","Array","isArray","NewFoodNameSuggestion","some","foodNameSuggestion","Date","toLocaleTimeString","split","hours","minutes","time","toNumberFormat","newFoodItems","foodItem","prefixedKeyFoodItem","newFoodNameSuggestion","removeItem","toDeleteFoodNameSuggestion","removeIdx","idx","splice","deleteFoodNameSuggestion","hasNameChanged","stringCopy","replace","number","parseFloat","Number","isNaN","calculateIE","ERROR_MESSAGE","areItemsTypeofNumber","items","item","calculateKE","alert","correctionInsulin","calculateCorrectionInsuline","round","KE","intermealKE","IE","current","scrollIntoView","smooth","everyKey","Object","keys","allFoodItemKeysInLocalStorage","wordsInKey","foodItemKey","push","getAllFoodItemsInLocalStorage","ReactDOM","render","document","getElementById","classList","add"],"mappings":"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","file":"static/js/main.d897317d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../css/style.css'\r\n\r\nexport default function Input({id, name='',value='', onChange='', description='', placeholder='', unit=''}) {\r\n    return (\r\n        <div>\r\n            <label> \r\n                {description}\r\n            </label>\r\n            <br />\r\n            <input\r\n                type='text'\r\n                autoComplete='off'\r\n                id={id}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange === '' ? () => 0 : (event) => onChange(event)}\r\n            ></input>\r\n            <label>\r\n                {unit}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\nimport Input from './Input'\r\n\r\nexport default function FixedInformationSection(\r\n    {setBloodSugar, \r\n    setTargetBloodSugar, \r\n    setCorrectionFactor,\r\n    setCarbohydrateFactor,\r\n    bloodSugar, \r\n    targetBloodSugar, \r\n    correctionFactor, \r\n    carbohydrateFactor\r\n    }) {\r\n    \r\n    return (\r\n        <div>\r\n            <Input \r\n                name = 'BloodSugar'\r\n                value = {bloodSugar.toString()}\r\n                description = 'Blutzucker'\r\n                unit = 'mg/dl'\r\n                onChange = {(event) => setBloodSugar(event.target.value)}\r\n            />\r\n            <Input \r\n                name = 'TargetBloodSugar'\r\n                value = {targetBloodSugar}\r\n                description = 'Blutzucker Zielwert'\r\n                unit = 'mg/dl'\r\n                onChange = {(event) => setTargetBloodSugar(event.target.value)}\r\n            />\r\n            <Input \r\n                name = 'CorrectionFactor'\r\n                value = {correctionFactor}\r\n                description = 'Korrektur-Faktor'\r\n                unit = 'mg/dl'\r\n                onChange = {(event) => setCorrectionFactor(event.target.value)}\r\n            />\r\n            <Input \r\n                name = 'CarbohydrateFactor'\r\n                value = {carbohydrateFactor}\r\n                description = 'KE-Faktor'\r\n                onChange = {(event) => setCarbohydrateFactor(event.target.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Suggestion({suggestionText, handleSuggestionClick}) {\r\n    return (\r\n        <li\r\n            onClick={() => handleSuggestionClick(suggestionText)}\r\n        >\r\n            {suggestionText}\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Suggestion from './Suggestion.js'\r\n\r\nexport default function SuggestionList({allSuggestions, searchingText, handleSuggestionClick}) {\r\n    \r\n    const matchingSuggestions = searchingText === '' ? [] : allSuggestions.filter(suggestionText => {\r\n        const potentialMatch = suggestionText.slice(0, searchingText.length)\r\n        return potentialMatch.toLowerCase() === searchingText.toLowerCase()\r\n    })\r\n    \r\n    return (\r\n        <div>\r\n            {matchingSuggestions.length !== 0 && <ul className='suggestion-list'>\r\n                {matchingSuggestions.map(suggestionText => <Suggestion \r\n                    key={Math.random()} \r\n                    suggestionText={suggestionText} \r\n                    handleSuggestionClick={handleSuggestionClick}\r\n                />)}\r\n            </ul>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\nimport Input from './Input'\r\nimport SuggestionList from './SuggestionList.js'\r\n\r\nexport default function FoodItem(\r\n    {id, \r\n    name='', \r\n    grams='', \r\n    carbohydratesPer100Grams='',\r\n    isIntermeal=false, \r\n    foodNameSuggestions,\r\n    handleIsIntermealChange, \r\n    handleChange,\r\n    deleteFoodItem,\r\n    shouldDisplaySuggestions=true,\r\n    handleSuggestionClick\r\n    }) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className = 'delete-food-item-button'\r\n                onClick={() => deleteFoodItem(id)}\r\n            ></button>\r\n\r\n            <label className='intermeal-checkbox'>\r\n                <input\r\n                    type = 'checkbox'\r\n                    checked = {isIntermeal}\r\n                    onChange = {() => handleIsIntermealChange(id)}\r\n                ></input> ZM?\r\n            </label>\r\n            \r\n            \r\n            <Input \r\n                id = {id}\r\n                name = 'name'\r\n                description = 'Name'\r\n                value = {name}\r\n                onChange = {(event) => handleChange(event)}\r\n            />\r\n            {shouldDisplaySuggestions && <SuggestionList \r\n                allSuggestions={foodNameSuggestions}\r\n                searchingText={name}\r\n                handleSuggestionClick={(suggestionText) => handleSuggestionClick(suggestionText, id)}\r\n            />}\r\n\r\n            <Input\r\n                id = {id}\r\n                name = 'grams'\r\n                description = 'Gramm'\r\n                value = {grams}\r\n                onChange = {(event) => handleChange(event)}\r\n            />\r\n            <Input\r\n                id = {id}\r\n                name = 'carbohydratesPer100Grams'\r\n                description = 'Kohlenhydrate pro 100g'\r\n                value = {carbohydratesPer100Grams}\r\n                onChange = {(event) => handleChange(event)}\r\n            />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\nimport FoodItem from './FoodItem'\r\n\r\nexport default function ListSection(\r\n    {foodItems=[], \r\n    foodNameSuggestions=[],\r\n    addNewFoodItem, \r\n    handleIsIntermealChange, \r\n    handleChange, \r\n    deleteFoodItem,\r\n    handleSuggestionClick\r\n    }) {\r\n    return (\r\n        <div>\r\n            <h3>Elemente</h3>\r\n\r\n            {foodItems.map(element => \r\n                <FoodItem \r\n                    key={element.key}\r\n                    id={element.id}\r\n                    name={element.name}\r\n                    grams={element.grams}\r\n                    carbohydratesPer100Grams={element.carbohydratesPer100Grams}\r\n                    isIntermeal={element.isIntermeal}\r\n                    foodNameSuggestions={foodNameSuggestions}\r\n                    shouldDisplaySuggestions={element.shouldDisplaySuggestions}\r\n                    handleIsIntermealChange={handleIsIntermealChange}\r\n                    handleChange={handleChange}\r\n                    deleteFoodItem={deleteFoodItem}\r\n                    handleSuggestionClick={handleSuggestionClick}\r\n             />)}\r\n             \r\n            <p>\r\n                <button \r\n                    className='add-new-food-item-button'\r\n                    onClick={() => addNewFoodItem()}\r\n                ></button>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../css/style.css'\r\n\r\nexport default function Output(\r\n    {totalIE, totalMainMealKE, totalIntermealKE, totalKE, totalCorrectionInsulin, outputRef}) {\r\n    return (\r\n        <div ref={outputRef}>\r\n            {!(totalIE === '' || totalIE == undefined || totalIE <= 0) ? \r\n\r\n                <p className='output' >\r\n                    Hauptmahlzeit-KE : {totalMainMealKE} KE <br />\r\n                    Zwischenmahlzeit-KE : {totalIntermealKE} KE <br />\r\n                    Gesamt-KE: {totalKE} KE <br />\r\n                    <br />\r\n                    Korrektur-Insulin: {totalCorrectionInsulin} IE  <br />\r\n                    Gesamt-Insulin: {totalIE} IE\r\n                </p>\r\n                \r\n             : ''}\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nconst PREFIX = \"insulin-calculator-\"\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    // get value\r\n    const prefixedKey = PREFIX + key\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if(jsonValue != null) return JSON.parse(jsonValue)\r\n        if(typeof initialValue === \"function\"){\r\n            return initialValue()\r\n        } else{\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    // save value\r\n    useEffect(() =>{\r\n        if(value != null)\r\n            localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue]\r\n}\r\n","import React, {useState, useRef, useEffect} from 'react'\r\n\r\nimport './css/style.css'\r\nimport FixedInformationSection from './Components/FixedInformationSection'\r\nimport ListSection from './Components/ListSection'\r\nimport Output from './Components/Output.js'\r\nimport useLocalStorage from './hooks/useLocalStorage.js'\r\n\r\n\r\nconst PREFIX = \"insulin-calculator-\"\r\n\r\nexport default function App( {hideLoadingScreen} ) {\r\n    const [lastSavedData, setLastSavedData] = useLocalStorage('lastSavedData')\r\n    const [foodNameSuggestions, setFoodNameSuggestions] = useLocalStorage('foodNameSuggestions', [])\r\n\r\n    const [bloodSugar, setBloodSugar] = useState('')\r\n    const [targetBloodSugar, setTargetBloodSugar] = useLocalStorage(`${getCurrentDayTime()}-targetBloodSugar`)\r\n    const [correctionFactor, setCorrectionFactor] = useLocalStorage(`${getCurrentDayTime()}-correctionFactor`)\r\n    const [carbohydrateFactor, setCarbohydrateFactor] = useLocalStorage(`${getCurrentDayTime()}-carbohydrateFactor`)\r\n\r\n    const [foodItems, setFoodItems] = useState([])\r\n\r\n    const [totalIE, setTotalIE] = useState('')\r\n    const [totalKE, setTotalKE] = useState('')\r\n    const [totalCorrectionInsulin, setTotalCorrectionInsulin] = useState('')\r\n    const [totalIntermealKE, setTotalIntermealKE] = useState('')\r\n    const [totalMainMealKE, setTotalMainMealKE] = useState('')\r\n\r\n    const outputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        addAllFoodItemsInLocalStorageToFoodNameSuggestions()\r\n    }, [])\r\n\r\n    function addAllFoodItemsInLocalStorageToFoodNameSuggestions(){\r\n        const allFoodItemsInLocalStorage = getAllFoodItemsInLocalStorage()\r\n        \r\n        addNewFoodNameSuggestion(allFoodItemsInLocalStorage)\r\n    }\r\n\r\n    function getAllFoodItemsInLocalStorage(){\r\n        const everyKey = Object.keys(localStorage)\r\n        const allFoodItemKeysInLocalStorage = []\r\n        \r\n        for(const key of everyKey){\r\n            const wordsInKey = key.split('-')\r\n            if(wordsInKey.length < 3) continue\r\n\r\n            const hasCorrectPrefix = `${PREFIX}foodItem` === `${wordsInKey[0]}-${wordsInKey[1]}-${wordsInKey[2]}`\r\n            if(hasCorrectPrefix){\r\n                const foodItemKey = capitalize(wordsInKey[3])\r\n                allFoodItemKeysInLocalStorage.push(foodItemKey)\r\n            }\r\n        }\r\n\r\n        return allFoodItemKeysInLocalStorage\r\n    }\r\n\r\n    function capitalize(string){\r\n        if(typeof string !== 'string') return ''\r\n        const capitalizedString = `${string[0].toUpperCase()}${string.slice(1)}`\r\n        return capitalizedString\r\n    }\r\n\r\n    function addNewFoodNameSuggestion(toAddFoodNameSuggestions){\r\n        let newFoodNameSuggestions = toAddFoodNameSuggestions\r\n\r\n        if(!Array.isArray(toAddFoodNameSuggestions)) newFoodNameSuggestions = [toAddFoodNameSuggestions]\r\n\r\n        newFoodNameSuggestions = newFoodNameSuggestions.filter(NewFoodNameSuggestion => {\r\n            const isAlreadyExisting = foodNameSuggestions.some(foodNameSuggestion => \r\n                NewFoodNameSuggestion === foodNameSuggestion)\r\n            return !isAlreadyExisting\r\n        })\r\n        if(newFoodNameSuggestions.length === 0) return\r\n\r\n        newFoodNameSuggestions = [...foodNameSuggestions, ...newFoodNameSuggestions]\r\n        setFoodNameSuggestions(newFoodNameSuggestions)\r\n    }\r\n\r\n    function deleteFoodNameSuggestion(toDeleteFoodNameSuggestion){\r\n        let removeIdx\r\n        for(let idx = 0; idx < foodNameSuggestions.length; idx++){\r\n            if(toDeleteFoodNameSuggestion === foodNameSuggestions[idx]){\r\n                removeIdx = idx\r\n                break\r\n            }\r\n        }\r\n        if(removeIdx == null) return\r\n\r\n        const newFoodNameSuggestions = [...foodNameSuggestions]\r\n        newFoodNameSuggestions.splice(removeIdx, 1)\r\n        setFoodNameSuggestions(newFoodNameSuggestions)\r\n    }\r\n   \r\n    function saveData(){\r\n        const newData = {\r\n            foodItems: foodItems\r\n        }\r\n        setLastSavedData(newData)\r\n    }\r\n\r\n    function loadData(){\r\n        if(lastSavedData == null) return\r\n        const {foodItems} = lastSavedData\r\n\r\n        setFoodItems(foodItems)\r\n\r\n        // not working because of async state setting\r\n        calculateIE()\r\n    }\r\n\r\n    function handleSuggestionClick(suggestionText, id){\r\n        const event = {target:{name:'name', value:suggestionText, id:id}}\r\n        handleChange(event)\r\n    }\r\n\r\n    function getCurrentDayTime(){\r\n        const [hours, minutes] = new Date().toLocaleTimeString().split(':')\r\n        const time =  toNumberFormat(hours) + (toNumberFormat(minutes) / 60)\r\n        let dayTime = ''\r\n        if(time <= 11.5){\r\n            dayTime = 'morning'\r\n        } else if(time <= 16){\r\n            dayTime = 'midday'\r\n        } else {\r\n            dayTime = 'evening'\r\n        }\r\n\r\n        return dayTime\r\n    }\r\n\r\n    function addNewFoodItem(){\r\n        const newFoodItems = [...foodItems, {\r\n            key:Math.random(),\r\n            id:Math.random(),\r\n            isIntermeal: false,\r\n            shouldDisplaySuggestions: true\r\n        }]\r\n        setFoodItems(newFoodItems)\r\n    }\r\n\r\n    function deleteFoodItem(id){\r\n        let removeIdx\r\n        for(let idx = 0; idx < foodItems.length; idx++){\r\n            if(id == foodItems[idx].id){\r\n                removeIdx = idx\r\n                break\r\n            }\r\n        }\r\n\r\n        const newFoodItems = [...foodItems]\r\n        newFoodItems.splice(removeIdx, 1)\r\n        setFoodItems(newFoodItems)\r\n    }\r\n\r\n    function handleChange(event){\r\n        const {name, value, id} = event.target\r\n\r\n        if(value[value.length - 1] === '-') return\r\n\r\n        const newFoodItems = foodItems.map(foodItem => {\r\n            if(id == foodItem.id){\r\n\r\n                // getting carbohydratesPer100Grams from name and setting the carbohydratesPer100Grams input\r\n                if(name === 'name'){\r\n                    const prefixedKey = `${PREFIX}foodItem-${value.toLowerCase()}-carbohydratesPer100Grams`\r\n                    const jsonValue = localStorage.getItem(prefixedKey)\r\n                    if(jsonValue != null){\r\n                        const carbohydratesPer100Grams = JSON.parse(jsonValue)\r\n                        \r\n                        // foodNameSuggestion\r\n                        const newFoodNameSuggestion = capitalize(value.toLowerCase())\r\n                        addNewFoodNameSuggestion(newFoodNameSuggestion)\r\n\r\n                        return {...foodItem, [name]:value, shouldDisplaySuggestions: false,\r\n                            carbohydratesPer100Grams: carbohydratesPer100Grams}\r\n                    }\r\n                }\r\n                    \r\n                // saving carbohydratesPer100Grams with name as key\r\n                if(name === 'carbohydratesPer100Grams' && foodItem.name !== '' && foodItem.name != null\r\n                && foodItem.name[0] !== '.'){\r\n                    const prefixedKeyFoodItem = `${PREFIX}foodItem-${foodItem.name.toLowerCase()}-carbohydratesPer100Grams`\r\n                    const newFoodNameSuggestion = capitalize(foodItem.name.toLowerCase())\r\n                    if(value !== '') {\r\n                        // store foodItems carbohydratesPer100Grams\r\n                        localStorage.setItem(prefixedKeyFoodItem, JSON.stringify(value))\r\n                        // foodNameSuggestion\r\n                        addNewFoodNameSuggestion(newFoodNameSuggestion)\r\n                    } else {\r\n                        localStorage.removeItem(prefixedKeyFoodItem)\r\n                        // foodNameSuggestion\r\n                        deleteFoodNameSuggestion(newFoodNameSuggestion)\r\n                    }\r\n                }\r\n                const hasNameChanged = name === 'name'\r\n                return {...foodItem, [name]:value, shouldDisplaySuggestions: hasNameChanged}\r\n            } else\r\n                return foodItem\r\n        })\r\n        setFoodItems(newFoodItems)\r\n    }\r\n\r\n    function handleIsIntermealChange(id){\r\n        const newFoodItems = foodItems.map(foodItem => {\r\n            if(id == foodItem.id)\r\n                return {...foodItem, isIntermeal: !foodItem.isIntermeal}\r\n            \r\n            return foodItem\r\n        })\r\n        setFoodItems(newFoodItems)\r\n    }\r\n\r\n    function toNumberFormat(string){\r\n        let stringCopy = string.slice()\r\n        stringCopy = stringCopy.replace(',', '.')\r\n        const number = parseFloat(stringCopy)\r\n        return Number.isNaN(number) ? -1 : number\r\n    }\r\n\r\n    function calculateIE(){\r\n        const ERROR_MESSAGE = 'ein oder mehrere Werte sind nicht gültig'\r\n\r\n        function areItemsTypeofNumber(...items){\r\n            for(const item of items)\r\n                if(toNumberFormat(item) === -1) return false\r\n            return true\r\n        }\r\n\r\n        function calculateKE(foodItem){\r\n            if(!areItemsTypeofNumber(foodItem.grams, foodItem.carbohydratesPer100Grams)) {\r\n                alert(ERROR_MESSAGE)\r\n                return 0\r\n            }\r\n\r\n            return (toNumberFormat(foodItem.grams) * (toNumberFormat(foodItem.carbohydratesPer100Grams) / 100)) / 10\r\n        }\r\n\r\n        function calculateCorrectionInsuline(bloodSugar, targetBloodSugar, correctionFactor){\r\n            if(!areItemsTypeofNumber(bloodSugar, targetBloodSugar, correctionFactor)){\r\n                if(bloodSugar !== '')\r\n                    alert(ERROR_MESSAGE)\r\n                return 0\r\n            }\r\n            const correctionInsulin = (toNumberFormat(bloodSugar) - toNumberFormat(targetBloodSugar)) /\r\n                toNumberFormat(correctionFactor)\r\n            return correctionInsulin\r\n        }\r\n\r\n        // correction insulin\r\n        const correctionInsulin = calculateCorrectionInsuline(bloodSugar, targetBloodSugar, correctionFactor)\r\n        setTotalCorrectionInsulin(Math.round(correctionInsulin * 10) / 10)\r\n\r\n        // total KE | totalIntermealKE\r\n        let KE = 0, intermealKE = 0\r\n        for(const foodItem of foodItems){\r\n            KE += calculateKE(foodItem)\r\n            intermealKE += foodItem.isIntermeal ? calculateKE(foodItem) : 0\r\n        }\r\n        setTotalKE(Math.round(KE * 10) / 10)\r\n        setTotalIntermealKE(Math.round(intermealKE * 10) / 10)\r\n        setTotalMainMealKE(Math.round((KE - intermealKE) * 10) / 10)\r\n        \r\n        // total IE\r\n        if(!areItemsTypeofNumber(carbohydrateFactor)) {\r\n            alert(ERROR_MESSAGE)\r\n            return -1\r\n        }\r\n\r\n        let IE = KE * toNumberFormat(carbohydrateFactor)\r\n        IE += correctionInsulin\r\n        IE = Math.round(IE * 10) / 10\r\n\r\n        setTotalIE(IE)\r\n        outputRef.current.scrollIntoView({smooth:true})\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Insulin Rechner</h1>\r\n\r\n            <p>\r\n                <button\r\n                    className='load-data-button'\r\n                    onClick = {loadData}\r\n                >Daten laden</button>\r\n            </p>\r\n\r\n            <FixedInformationSection \r\n                setBloodSugar={setBloodSugar}\r\n                setTargetBloodSugar={setTargetBloodSugar}\r\n                setCorrectionFactor={setCorrectionFactor}\r\n                setCarbohydrateFactor={setCarbohydrateFactor}\r\n                bloodSugar={bloodSugar}\r\n                targetBloodSugar={targetBloodSugar}\r\n                correctionFactor={correctionFactor}\r\n                carbohydrateFactor={carbohydrateFactor}\r\n            />\r\n            <ListSection \r\n                foodItems={foodItems}\r\n                foodNameSuggestions={foodNameSuggestions}\r\n                addNewFoodItem={addNewFoodItem}\r\n                handleIsIntermealChange={handleIsIntermealChange}\r\n                handleChange={handleChange}\r\n                deleteFoodItem={deleteFoodItem}\r\n                handleSuggestionClick={handleSuggestionClick}\r\n            />\r\n\r\n            <button\r\n                className='save-data-button'\r\n                onClick = {saveData}\r\n            >Daten speichen</button>\r\n\r\n            <button \r\n                className='calculateIE-button'\r\n                onClick={calculateIE}\r\n            >Berechne IE</button>\r\n            \r\n            \r\n            <Output \r\n                totalIE={totalIE}\r\n                totalMainMealKE={totalMainMealKE}\r\n                totalIntermealKE={totalIntermealKE}\r\n                totalKE={totalKE}\r\n                totalCorrectionInsulin={totalCorrectionInsulin}\r\n                outputRef={outputRef}\r\n            />\r\n        </div>  \r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from './App.js'\r\n\r\n\r\nfunction hideLoadingScreen(){\r\n    const loadingScreen = document.getElementById('loadingScreen');\r\n    loadingScreen.classList.add('hide')\r\n}\r\n\r\nReactDOM.render(\r\n    <App \r\n        hideLoadingScreen={hideLoadingScreen}\r\n    />, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}